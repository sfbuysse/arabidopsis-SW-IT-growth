values = c("#CC79A7", "#009E73"))+
theme_minimal()+
theme(
axis.title = element_text(family = "serif", color = "black", size = 35),
axis.text = element_text(family = "serif", color = "black", size = 35),
axis.line = element_line(colour = 'black', linewidth = 3),
axis.ticks = element_line(color = 'black', linewidth = 3),
axis.ticks.length=unit(.15, "cm"),
)
ggsave(ln_fig, filename = "../figures/LeafNumberByDate.png",width = 12.71, height = 7.68, unit = "in",   dpi = 400)
#RosArea
ros_fig <- ggplot(data = RosAreaByDate, aes(x = Date2, y = RosAreaMean)) +
geom_point(aes(col=Population, shape = Trt), size = 1, show.legend = TRUE) +
geom_line(aes(group = Trt:Population, col = Population, linetype = Trt), show.legend = TRUE, size = 1.5)+
labs(y="Rosette Area (cm^2)",
x="Days after planting")+
scale_color_manual(name = "Population",
labels = c("IT", "SW"),
values = c("#CC79A7", "#009E73"))+
theme_minimal()+
theme(
axis.title = element_text(family = "serif", color = "black", size = 35),
axis.text = element_text(family = "serif", color = "black", size = 35),
axis.line = element_line(colour = 'black', linewidth = 3),
axis.ticks = element_line(color = 'black', linewidth = 3),
axis.ticks.length=unit(.15, "cm"),
)
ggsave(ros_fig, filename = "../figures/RosetteAreaByDate.png", width = 12.71, height = 7.68, unit = "in", dpi = 400)
#TotalNum
Tn_fig <- ggplot(data = TotalNumByDate, aes(x = Date2, y = TotalNumMean)) +
geom_point(aes(col=Population, shape = Trt), size = 1, show.legend = TRUE) +
geom_line(aes(group = Trt:Population, col = Population, linetype = Trt), show.legend = TRUE, size = 1.5)+
labs(y="Total Leaf Number",
x="Days after planting")+
scale_color_manual(name = "Population",
labels = c("IT", "SW"),
values = c("#CC79A7", "#009E73"))+
theme_minimal()+
theme(
axis.title = element_text(family = "serif", color = "black", size = 35),
axis.text = element_text(family = "serif", color = "black", size = 35),
axis.line = element_line(colour = 'black', linewidth = 3),
axis.ticks = element_line(color = 'black', linewidth = 3),
axis.ticks.length=unit(.15, "cm"),
)
ggsave(Tn_fig, filename = "../figures/TotalLeafNumByDate.png", width = 12.71, height = 7.68, unit = "in", dpi = 400)
Tn_fig
ln_fig
ros_fig
theme_set(theme_classic())
theme_update(legend.title = element_text(family = "serif", color = "black", size = 14),
legend.text = element_text(family = "serif", color = "black", size = 14),
axis.title = element_text(family = "serif", color = "black", size = 14),
axis.text = element_text(family = "serif", color = "black", size = 14),
axis.line = element_line(colour = 'black', linewidth = 1),
axis.ticks = element_line(color = 'black', linewidth = 1),
axis.ticks.length=unit(.15, "cm"),
legend.spacing.y = unit(0.03, "cm"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = margin(t=0.25, r=0.075, b=0.075, l=0.05, unit = "in")
)
# remove NAs
rosarea <- RosAreaTime[complete.cases(RosAreaTime), ]
# make geno a factor
rosarea$Geno <- as.factor(rosarea$Geno)
# add log transformed column
rosarea$log_area <- log(rosarea$LeafArea)
# plot trends by grouping with loess fit lines
# check ancova assumptions
ggscatter(
rosarea, x = "Date2", y = "LeafArea",
facet.by  = c("Population", "Trt"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
ggscatter(
rosarea, x = "Date2", y = "log_area",
facet.by  = c("Population", "Trt"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
# change to days since Emergence
ggscatter(
rosarea, x = "DaysFromEmergence", y = "LeafArea",
facet.by  = c("Population", "Trt"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
ggscatter(
rosarea, x = "DaysFromEmergence", y = "log_area",
facet.by  = c("Population", "Trt"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
# add quadratic term, no scaling
rosarea$quad_date <- rosarea$DaysFromEmergence^2
#add quadratic term - this version is centered to reduce colinearity with the linear term
#rosarea$quad_date <- scale((rosarea$Date2)^2, scale = FALSE)
# scaling doesn't change the results, so did not scale to not worry about interpreting scaled date values
# make a list of dataframes where each dataframe is the leaf areas for one genotype
area_by_geno <- list(rep(NA, times = 44))
genos <- unique(rosarea$Geno)
trts <- unique(rosarea$Trt)
# current
for (i in 1:22){
area_by_geno[[i]] <- rosarea[(rosarea$Geno == genos[i]& rosarea$Trt == trts[1]), ]
}
# 102 and 105 have no data
#do a second loop for fut so notating for area list is easier
for (i in 1:length(genos)){
area_by_geno[[22+i]] <- rosarea[(rosarea$Geno == genos[i]& rosarea$Trt == trts[2]), ]
}
area_by_geno <- area_by_geno[c(1,3,4,6:44)]
# run a model for each item in the area_by_geno list
# df to save slopes
slopes <- data.frame(Geno = c(genos[c(1,3,4,6:22)], genos),
Trt = as.factor(c(rep("Cur", times = 20), rep("Fut", times = 22))),
Beta = rep(NA, times = 42))
slopes$uniqueID <- paste0(slopes$Trt, slopes$Geno )
slopes$Pop <- factor("SW", levels = c("SW", "IT"))
slopes[as.numeric(slopes$Geno) < 11, "Pop" ] <- "IT"
for (j in 1:length(area_by_geno)){
tmp <- lm(log_area ~ DaysFromEmergence, data = area_by_geno[[j]])
# do any of the models fit well? commented out but decent
#hist(residuals(tmp))
#plot(fitted(tmp), residuals(tmp, type = "pearson", scaled = TRUE))
slopes$Beta[j] <- tmp[["coefficients"]][["DaysFromEmergence"]]
# model data
#modData = tmp$coefficients[1]+area_by_geno[[j]]$DaysFromEmergence*tmp$coefficients[2]
## look at the model-predicted data curve on top of the actual data
#plot(area_by_geno[[j]]$DaysFromEmergence, area_by_geno[[j]]$log_area, bty="n", col="darkgray")
#points(area_by_geno[[j]]$DaysFromEmergence, modData,col="red",lwd=2)
}
# add quad to initial model
slopes2 <- data.frame(Geno = c(genos[c(1,3,4,6:22)], genos),
Trt = as.factor(c(rep("Cur", times = 20), rep("Fut", times = 22))),
Beta = rep(NA, times = 42),
gamma = rep(NA, times = 42))
slopes2$uniqueID <- paste0(slopes$Trt, slopes$Geno )
slopes2$Pop <- factor("SW", levels = c("SW", "IT"))
slopes2[as.numeric(slopes2$Geno) < 11, "Pop" ] <- "IT"
for (j in 1:length(area_by_geno)){
tmp <- lm(log_area ~ DaysFromEmergence + quad_date, data = area_by_geno[[j]])
# do any of the models fit well? commented plots our but yes
#hist(residuals(tmp))
#plot(fitted(tmp), residuals(tmp, type = "pearson", scaled = TRUE))
slopes2$Beta[j] <- tmp[["coefficients"]][["DaysFromEmergence"]]
slopes2$gamma[j] <- tmp[["coefficients"]][["quad_date"]]
slopes2$intercept[j] <- tmp[["coefficients"]][["(Intercept)"]]
# model data
#
#modData = tmp$coefficients[1]+as.numeric(area_by_geno[[j]]$DaysFromEmergence)*tmp$coefficients[2] + as.numeric(area_by_geno[[j]]$quad_date)*tmp$coefficients[3]
## look at the model-predicted data curve on top of the actual data
#plot(area_by_geno[[j]]$DaysFromEmergence, area_by_geno[[j]]$log_area, bty="n", col="darkgray")
#points(area_by_geno[[j]]$DaysFromEmergence, modData,col="red",lwd=2)
}
# step 2 model for linear step 1
final_mod <- lm(Beta ~ Trt * Pop, data = slopes, contrasts = list(Trt=contr.sum, Pop = contr.sum))
hist(residuals(final_mod))
plot(fitted(final_mod), residuals(final_mod, type = "pearson", scaled = TRUE),
col = c("red", "blue")[as.numeric(slopes$Pop)],
pch = c(16, 5)[as.numeric(slopes$Trt)])
# I think this is better
summary(final_mod)
# estimated marginal means for plotting
slope_means <- as.data.frame(emmeans(final_mod, specs = c("Trt", "Pop")))
# plot. mean is the predicted value.
ggplot(data = slopes, aes(y = Beta, x = Trt))+
geom_point(aes(col = Pop), alpha = 0.6, shape = 16, position = position_jitter(width = .3, height = 0), size = 2)+
geom_point(data = slope_means, aes(x = Trt, y = emmean, fill = Pop),position = position_dodge(width = 0.1), alpha = 0.8, shape = 21, size = 3)+ # big point for pop means
geom_errorbar(data = slope_means, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.1), width = 0.1, size = 0.8, show.legend = TRUE)+
#geom_line(data = slope_means, aes(group = Pop, col = Pop), size = 1)+
labs(x = "Treatment")+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))
# without log, Italy has two low outliers in Cur that don't appear when log transformed.
final_mod2_beta <- lm(Beta ~ Trt * Pop, data = slopes2, contrasts = list(Trt=contr.sum, Pop = contr.sum))
hist(residuals(final_mod2_beta))
plot(fitted(final_mod2_beta), residuals(final_mod2_beta, type = "pearson", scaled = TRUE),
col = c("red", "blue")[as.numeric(slopes2$Pop)],
pch = c(16, 5)[as.numeric(slopes2$Trt)])
summary(final_mod2_beta)
# all the standard errors for each term are identical
final_mod2_gamma <- lm(gamma ~ Trt * Pop, data = slopes2, contrasts = list(Trt=contr.sum, Pop = contr.sum))
hist(residuals(final_mod2_gamma))
plot(fitted(final_mod2_gamma), residuals(final_mod2_gamma, type = "pearson", scaled = TRUE),
col = c("red", "blue")[as.numeric(slopes2$Pop)],
pch = c(16, 5)[as.numeric(slopes2$Trt)])
summary(final_mod2_gamma)
final_mod2_int <- lm(intercept ~ Trt * Pop, data = slopes2, contrasts = list(Trt=contr.sum, Pop = contr.sum))
# estimated marginal means for plotting
slope2_means <- as.data.frame(emmeans(final_mod2_beta, specs = c("Trt", "Pop")))
slope2_gammas <- as.data.frame(emmeans(final_mod2_gamma, specs = c("Trt", "Pop")))
slope2_intercepts <- as.data.frame(emmeans(final_mod2_int, specs = c("Trt", "Pop")))
# plot. mean is the predicted value... that is good and makes sense?
beta_leafarea <- ggplot(data = slopes2, aes(y = Beta, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_means, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_means, aes(x = Trt, y = emmean, fill = Pop, shape = Pop),position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment")+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
gamma_leafarea <- ggplot(data = slopes2, aes(y = gamma, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_gammas, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop), position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_gammas, aes(x = Trt, y = emmean, fill = Pop, shape = Pop), position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment", y = "Gamma")+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
#would need to create a custom function for each line
RosAreaTime$log_area <- log(RosAreaTime$LeafArea)
trends_leafarea <- ggplot(data = RosAreaTime, aes(x = DaysFromEmergence, y = log_area))+
geom_line(aes(group = grp, col = Population, linetype = Trt), size = 0.4, alpha = 0.4, show.legend = TRUE)+
geom_function(fun = function(x) slope2_intercepts$emmean[1] + slope2_means$emmean[1]*x + slope2_gammas$emmean[1]*x^2, colour = "#009E73", linetype = "solid", xlim=c(0, 100), size = 0.8)+ # Cur SW
geom_function(fun = function(x) slope2_intercepts$emmean[2] + slope2_means$emmean[2]*x + slope2_gammas$emmean[2]*x^2, colour = "#009E73", linetype = "dotdash", xlim=c(0, 100), size = 0.8)+ # Fut SW
geom_function(fun = function(x) slope2_intercepts$emmean[3] + slope2_means$emmean[3]*x + slope2_gammas$emmean[3]*x^2, colour = "#CC79A7", linetype = "solid", xlim=c(0, 100), size = 0.8)+ # Cur IT
geom_function(fun = function(x) slope2_intercepts$emmean[4] + slope2_means$emmean[4]*x + slope2_gammas$emmean[4]*x^2, colour = "#CC79A7", linetype = "dotdash", xlim=c(0, 100), size = 0.8)+ # Fut IT
labs(x = "Days After Planting", y = "Log Leaf Area")+
scale_color_manual(name = "Population",
labels = c("IT", "SW"),
values = c("#CC79A7", "#009E73"))+
scale_linetype_manual(name = "Treatment",
labels = c("Current", "Future"),
values = c("solid", "dotdash"))
trends_leafarea
beta_leafarea
gamma_leafarea
# remove NAs
rosnum <- LeafNumTime[complete.cases(LeafNumTime), ]
# remove zeros
rosnum <- rosnum[!(rosnum$LeafNum == 0), ]
# make geno a factor
rosnum$Geno <- as.factor(rosnum$Geno)
# add log transformed column
rosnum$log_ln <- log(rosnum$LeafNum)
# plot trends by grouping factor
ggscatter(
rosnum, x = "Date2", y = "LeafNum",
facet.by  = c("Population", "Trt"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
ggscatter(
rosnum, x = "Date2", y = "log_ln",
facet.by  = c("Population", "Trt"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
# by Days Since Emergence
ggscatter(
rosnum, x = "DaysFromEmergence", y = "LeafNum",
facet.by  = c("Population", "Trt"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
ggscatter(
rosnum, x = "DaysFromEmergence", y = "log_ln",
facet.by  = c("Population", "Trt"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
# add quadratic term, no scaling
rosnum$quad_date <- rosnum$DaysFromEmergence^2
# make a list of dataframes where each dataframe is the leaf areas for one genotype
ln_by_geno <- list(rep(NA, times = 44))
genos_ln <- unique(rosnum$Geno)
trts_ln <- unique(rosnum$Trt)
# current
for (i in 1:22){
ln_by_geno[[i]] <- rosnum[(rosnum$Geno == genos_ln[i]& rosnum$Trt == trts_ln[1]), ]
}
# 102 and 105 again have no data
# fut
for (i in 1:length(genos_ln)){
ln_by_geno[[22+i]] <- rosnum[(rosnum$Geno == genos_ln[i]& rosnum$Trt == trts_ln[2]), ]
}
ln_by_geno <- ln_by_geno[c(1,3,4,6:44)]
# run a model for each item in the ln_by_geno list
slopes_ln <- data.frame(Geno = c(genos[c(1,3,4,6:22)], genos),
Trt = as.factor(c(rep("Cur", times = 20), rep("Fut", times = 22))),
Beta = rep(NA, times = 42))
slopes_ln$uniqueID <- paste0(slopes_ln$Trt, slopes_ln$Geno )
slopes_ln$Pop <- factor("SW", levels = c("SW", "IT"))
slopes_ln[as.numeric(slopes_ln$Geno) < 11, "Pop" ] <- "IT"
for (j in 1:length(ln_by_geno)){
tmp <- lm(LeafNum ~ DaysFromEmergence, data = ln_by_geno[[j]])
# do any of the models fit well?
#hist(residuals(tmp))
#plot(fitted(tmp), residuals(tmp, type = "pearson", scaled = TRUE))
slopes_ln$Beta[j] <- tmp[["coefficients"]][["DaysFromEmergence"]]
# model data
modData = tmp$coefficients[1]+ln_by_geno[[j]]$DaysFromEmergence*tmp$coefficients[2]
## look at the model-predicted data curve on top of the actual data
#plot(ln_by_geno[[j]]$DaysFromEmergence, ln_by_geno[[j]]$LeafNum, bty="n", col="darkgray")
#points(ln_by_geno[[j]]$DaysFromEmergence, modData,col="red",lwd=2)
}
# check quadratic
slopes2_ln <- data.frame(Geno = c(genos[c(1,3,4,6:22)], genos),
Trt = as.factor(c(rep("Cur", times = 20), rep("Fut", times = 22))),
Beta = rep(NA, times = 42),
gamma = rep(NA, times = 42))
slopes2_ln$uniqueID <- paste0(slopes_ln$Trt, slopes_ln$Geno )
slopes2_ln$Pop <- factor("SW", levels = c("SW", "IT"))
slopes2_ln[as.numeric(slopes2_ln$Geno) < 11, "Pop" ] <- "IT"
for (j in 1:length(ln_by_geno)){
tmp <- lm(LeafNum ~ DaysFromEmergence + quad_date, data = ln_by_geno[[j]])
# do any of the models fit well?
#hist(residuals(tmp))
#plot(fitted(tmp), residuals(tmp, type = "pearson", scaled = TRUE))
slopes2_ln$Beta[j] <- tmp[["coefficients"]][["DaysFromEmergence"]]
slopes2_ln$gamma[j] <- tmp[["coefficients"]][["quad_date"]]
slopes2_ln$intercept[j] <- tmp[["coefficients"]][["(Intercept)"]]
# model data
#modData = tmp$coefficients[1]+as.numeric(ln_by_geno[[j]]$DaysFromEmergence)*tmp$coefficients[2] + as.numeric(ln_by_geno[[j]]$quad_date)*tmp$coefficients[3]
## look at the model-predicted data curve on top of the actual data
#plot(ln_by_geno[[j]]$DaysFromEmergence, ln_by_geno[[j]]$LeafNum, bty="n", col="darkgray")
#points(ln_by_geno[[j]]$DaysFromEmergence, modData,col="red",lwd=2)
}
# actual model for linear step 1
final_mod_ln <- lm(Beta ~ Trt * Pop, data = slopes_ln, contrasts = list(Trt=contr.sum, Pop = contr.sum))
hist(residuals(final_mod_ln))
plot(fitted(final_mod_ln), residuals(final_mod_ln, type = "pearson", scaled = TRUE),
col = c("red", "blue")[as.numeric(slopes_ln$Pop)],
pch = c(16, 5)[as.numeric(slopes_ln$Trt)])
summary(final_mod_ln)
# estimated marginal means for plotting
slope_ln_means <- as.data.frame(emmeans(final_mod_ln, specs = c("Trt", "Pop")))
# plot. mean is the predicted value.
ggplot(data = slopes_ln, aes(y = Beta, x = Trt))+
geom_point(aes(col = Pop), alpha = 0.6, shape = 16, position = position_jitter(width = .3, height = 0), size = 2)+
geom_point(data = slope_ln_means, aes(x = Trt, y = emmean, fill = Pop),position = position_dodge(width = 0.5), alpha = 0.8, shape = 21, size = 3)+ # big point for pop means
geom_errorbar(data = slope_ln_means, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.1, size = 0.8, show.legend = TRUE)+
#geom_line(data = slope_means, aes(group = Pop, col = Pop), size = 1)+
labs(x = "Treatment")+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))
final_mod2_ln_beta <- lm(Beta ~ Trt * Pop, data = slopes2_ln, contrasts = list(Trt=contr.sum, Pop = contr.sum))
hist(residuals(final_mod2_ln_beta))
plot(fitted(final_mod2_ln_beta), residuals(final_mod2_ln_beta, type = "pearson", scaled = TRUE),
col = c("red", "blue")[as.numeric(slopes2_ln$Pop)],
pch = c(16, 5)[as.numeric(slopes2_ln$Trt)])
summary(final_mod2_ln_beta)
# all the standard errors for each term are identical
final_mod2_ln_gamma <- lm(gamma ~ Trt * Pop, data = slopes2_ln, contrasts = list(Trt=contr.sum, Pop = contr.sum))
hist(residuals(final_mod2_ln_gamma))
plot(fitted(final_mod2_ln_gamma), residuals(final_mod2_ln_gamma, type = "pearson", scaled = TRUE),
col = c("red", "blue")[as.numeric(slopes2_ln$Pop)],
pch = c(16, 5)[as.numeric(slopes2_ln$Trt)])
summary(final_mod2_ln_gamma)
final_mod2_ln_int <- lm(intercept ~ Trt * Pop, data = slopes2_ln, contrasts = list(Trt=contr.sum, Pop = contr.sum))
# estimated marginal means for plotting
slope2_ln_means <- as.data.frame(emmeans(final_mod2_ln_beta, specs = c("Trt", "Pop")))
slope2_ln_gammas <- as.data.frame(emmeans(final_mod2_ln_gamma, specs = c("Trt", "Pop")))
slope2_ln_intercepts <- as.data.frame(emmeans(final_mod2_ln_int, specs = c("Trt", "Pop")))
# plot
beta_leafnum <- ggplot(data = slopes2_ln, aes(y = Beta, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_ln_means, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_ln_means, aes(x = Trt, y = emmean, fill = Pop, shape = Pop),position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment")+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
gamma_leafnum <- ggplot(data = slopes2_ln, aes(y = gamma, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_ln_gammas, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_ln_gammas, aes(x = Trt, y = emmean, fill = Pop, shape = Pop),position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment", y = "Leaf Area Gamma")+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
trends_leafnum <- ggplot(data = LeafNumTime, aes(x = DaysFromEmergence, y = LeafNum))+
geom_line(aes(group = grp, col = Population, linetype = Trt), size = 0.4, alpha = 0.4, show.legend = TRUE)+
geom_function(fun = function(x) slope2_ln_intercepts$emmean[1] + slope2_ln_means$emmean[1]*x + slope2_ln_gammas$emmean[1]*x^2, colour = "#009E73", linetype = "solid", xlim=c(0, 100), size = 0.8)+ # Cur SW
geom_function(fun = function(x) slope2_ln_intercepts$emmean[2] + slope2_ln_means$emmean[2]*x + slope2_ln_gammas$emmean[2]*x^2, colour = "#009E73", linetype = "dotdash", xlim=c(0, 100), size = 0.8)+ # Fut SW
geom_function(fun = function(x) slope2_ln_intercepts$emmean[3] + slope2_ln_means$emmean[3]*x + slope2_ln_gammas$emmean[3]*x^2, colour = "#CC79A7", linetype = "solid", xlim=c(0, 100), size = 0.8)+ # Cur IT
geom_function(fun = function(x) slope2_ln_intercepts$emmean[4] + slope2_ln_means$emmean[4]*x + slope2_ln_gammas$emmean[4]*x^2, colour = "#CC79A7", linetype = "dotdash", xlim=c(0, 100), size = 0.8)+ # Fut IT
labs(x = "Days After Emergence", y = "Leaf Number")+
scale_color_manual(name = "Population",
labels = c("IT", "SW"),
values = c("#CC79A7", "#009E73"))+
scale_linetype_manual(name = "Treatment",
labels = c("Current", "Future"),
values = c("solid", "dotdash"))
trends_leafnum
beta_leafnum
gamma_leafnum
# plot
beta_leafnum <- ggplot(data = slopes2_ln, aes(y = Beta, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_ln_means, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_ln_means, aes(x = Trt, y = emmean, fill = Pop, shape = Pop),position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment", y = expression(paste("Leaf Number", beta)))+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
beta_leafnum
# plot
beta_leafnum <- ggplot(data = slopes2_ln, aes(y = Beta, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_ln_means, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_ln_means, aes(x = Trt, y = emmean, fill = Pop, shape = Pop),position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment", y = expression(paste("Leaf Number  ", beta)))+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
beta_leafnum
beta_leafnum
# plot
beta_leafnum <- ggplot(data = slopes2_ln, aes(y = Beta, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_ln_means, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_ln_means, aes(x = Trt, y = emmean, fill = Pop, shape = Pop),position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment", y = expression(paste("Leaf Number:  ", beta)))+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
beta_leafnum
beta_leafnum <- ggplot(data = slopes2_ln, aes(y = Beta, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_ln_means, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_ln_means, aes(x = Trt, y = emmean, fill = Pop, shape = Pop),position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment", y = expression(paste("Leaf Number :  ", beta)))+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
gamma_leafnum <- ggplot(data = slopes2_ln, aes(y = gamma, x = Trt))+
geom_point(aes(col = Pop, fill = Pop, shape = Pop), alpha = 0.6, position = position_jitter(width = .3, height = 0), size = 2)+
geom_errorbar(data = slope2_ln_gammas, aes(x = Trt, y = emmean, ymin=lower.CL, ymax = upper.CL, col = Pop),position = position_dodge(width = 0.5), width = 0.3, size = 0.8, show.legend = FALSE)+
geom_point(data = slope2_ln_gammas, aes(x = Trt, y = emmean, fill = Pop, shape = Pop),position = position_dodge(width = 0.5), size = 3)+ # big point for pop means
labs(x = "Treatment", y = expression(paste("Leaf Number :  ",gamma)))+
scale_color_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_fill_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c("#009E73", "#CC79A7"))+
scale_shape_manual(name = "Population",
labels = c("Sweden", "Italy"),
values = c(24, 21))
beta_leafnum
gamma_leafnum
figure <- ggarrange(trends_leafarea+rremove("xlab"), beta_leafarea+rremove("xlab"), gamma_leafarea+rremove("xlab"),
trends_leafnum, beta_leafnum, gamma_leafnum,
labels = c("A", "B", "C", "D", "E", "F", "G", "H", "I"),
ncol = 3, nrow = 2,
widths = c(1, 0.49, 0.51 ),
common.legend = TRUE, # goes based on the first plot
legend = "top",
align = "hv")
# needs a 4:3 aspect ratio
ggsave(figure, filename = "../figures/Micropub_figure.jpg", width = 8, height = 6, units = "in", dpi = 500)
